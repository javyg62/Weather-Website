"use node";

import { internalAction } from "./_generated/server";
import { v } from "convex/values";

export const generateWeatherEmailTemplate = internalAction({
  args: {
    weather: v.object({
      location: v.string(),
      temperature: v.number(),
      condition: v.string(),
      humidity: v.number(),
      windSpeed: v.number(),
      icon: v.string(),
      timestamp: v.number(),
    }),
    location: v.string(),
  },
  handler: async (ctx, args) => {
    const { weather } = args;
    
    // Import MJML for compilation
    const mjml = require('mjml');
    
    // MJML template for weather email
    const mjmlTemplate = `
<mjml>
  <mj-head>
    <mj-title>Weather Report for ${weather.location}</mj-title>
    <mj-preview>Current weather: ${weather.temperature}Â°C, ${weather.condition}</mj-preview>
    <mj-attributes>
      <mj-all font-family="Arial, sans-serif" />
      <mj-text font-size="14px" color="#333333" line-height="20px" />
    </mj-attributes>
    <mj-style inline="inline">
      .weather-card {
        background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
        border-radius: 12px;
        padding: 20px;
        color: white;
      }
      .temperature {
        font-size: 48px;
        font-weight: bold;
        margin: 0;
      }
      .condition {
        font-size: 18px;
        margin: 5px 0;
      }
      .details {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        padding: 15px;
        margin-top: 15px;
      }
    </mj-style>
  </mj-head>
  <mj-body background-color="#f4f4f4">
    <mj-section background-color="#ffffff" padding="20px">
      <mj-column>
        <mj-text align="center" font-size="24px" font-weight="bold" color="#2d3748">
          Weather Report
        </mj-text>
        <mj-text align="center" font-size="16px" color="#718096">
          ${new Date(weather.timestamp).toLocaleDateString('en-US', { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}
        </mj-text>
      </mj-column>
    </mj-section>
    
    <mj-section background-color="#ffffff" padding="0 20px 20px">
      <mj-column>
        <mj-text css-class="weather-card">
          <div style="text-align: center;">
            <div style="font-size: 60px; margin-bottom: 10px;">${weather.icon}</div>
            <h2 style="margin: 0; font-size: 24px;">${weather.location}</h2>
            <div class="temperature">${weather.temperature}Â°C</div>
            <div class="condition">${weather.condition}</div>
            
            <div class="details">
              <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                <span>ðŸ’§ Humidity:</span>
                <span>${weather.humidity}%</span>
              </div>
              <div style="display: flex; justify-content: space-between;">
                <span>ðŸ’¨ Wind Speed:</span>
                <span>${weather.windSpeed} km/h</span>
              </div>
            </div>
          </div>
        </mj-text>
      </mj-column>
    </mj-section>
    
    <mj-section background-color="#ffffff" padding="20px">
      <mj-column>
        <mj-text align="center" font-size="12px" color="#a0aec0">
          This weather report was generated by your Weather App subscription.
          <br/>
          To unsubscribe or modify your preferences, visit your dashboard.
        </mj-text>
      </mj-column>
    </mj-section>
  </mj-body>
</mjml>`;

    // Compile MJML to HTML
    const { html, errors } = mjml(mjmlTemplate);
    
    if (errors.length > 0) {
      console.error('MJML compilation errors:', errors);
    }
    
    return {
      mjml: mjmlTemplate,
      html: html,
      errors: errors
    };
  },
});
